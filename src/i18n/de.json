{
  "home": {
    "ref": "home",
    "title": "HOME",
    "greeting": "Hallo, ich bin ",
    "author": "Diana Moreno",
    "author_position": "Ich bin Full Stack Web-Entwicklerin.",
    "creative": "Ich bin kreativ.",
    "design": "Ich liebe Design.",
    "develop": "Ich liebe entwickeln.",
    "view_more": "Mehr dazu"
  },
  "about": {
    "ref": "uber-mich",
    "title": "ÜBER MICH",
    "cv_text": "Möchtest du mehr über meinen beruflichen Werdegang erfahren?",
    "cv_button": "Lebenslauf herunterladen",
    "concepts_key": {
      "concept_key_1": {
        "title": "Responsives Webdesign",
        "description": "Handys werden immer beliebter als Computer.Deshalb versuche ich, Projekte mit allen Geräten kompatibel zu machen, den Trends folgend."
      },
      "concept_key_2": {
        "title": "Einfachheit",
        "description": "Ich betrachte das Design als einen wichtigen Teil eines Projekts und entscheide mich daher für attraktive Benutzeroberflächen, ohne dabei die Einfachheit zu verlieren. Weniger ist mehr."
      },
      "concept_key_3": {
        "title": "Best Practices",
        "description": "Sowohl für die Team- als auch für die Einzelarbeit halte ich es für sehr wichtig, einen Qualitäts-Code zu erstellen: organisiert, einfach, getestet und wiederverwendbar."
      },
      "concept_key_4": {
        "title": "Neueste Technologien",
        "description": "Ich interessiere mich für neue Technologien und glaube an kontinuierliche Weiterbildung. Die letzte Technologie, die ich gelernt habe, war Gatsby, die heutzutage sehr im Trend liegt."
      }
    },
    "my_story": {
      "title": "Meine Geschichte",
      "section_1": "Im Jahr 2012 erlangte ich einen Bachelor in Betriebswirtschaft und Management an der Universität von Barcelona. Nach Abschluss meines Studiums habe ich eine berufliche Laufbahn als Buchhalterin begonnen und bin stetig gewachsen, bis ich Team Manager wurde.",
      "section_2": "Sechs Jahre später wurde mir klar, dass mich dieses Gebiet nicht mehr erfüllte. Ich brauchte eine neue Herausforderung, bei der ich mich beruflich weiterentwickeln konnte.",
      "section_3": "Das Programmieren interessierte mich mehr und mehr, und ich verspürte ein unwiderstehliches Bedürfnis, dieses Gebiet zu erforschen. Deshalb kündigte ich im Anfang 2019 meinen Job und begann, auf eigene Faust zu lernen. Von September 2019 bis Dezember 2019 war ich in einem Programmier-Bootcamp in Skylab angemeldet, um mein Wissen zu festigen und zu erweitern."
    },
    "nowadays": {
      "title": "Heutzutage",
      "section_1": "Ich arbeite derzeit bei Interficie: eine Firma, die E-Commerce-Sites und kreative Lösungen für große Unternehmen entwickelt.",
      "section_2": "Die Programmiersprache, die ich verwende, ist JavaScript, und mein Technologiestack ist die folgende: React, Gatsby, Node, SQL und Express."
    },
    "passions": {
      "title": "Leidenschaften",
      "section_1": "Außer dem Programmieren mag ich einen gesunden Lebensstil: Ich achte genau darauf, was ich esse, und ich treibe regelmäßig Sport. Ich liebe es auch zu tanzen, bis zu dem Punkt, dass ich einer Amateursalsa-Tanzkompanie beigetreten bin."
    }
  },
  "translations": {
    "ref": "ubersetzungen",
    "title": "ÜBERSETZUNGEN",
    "introduction": "Diese Seite wurde in mehrere Sprachen übersetzt, du kannst sie auf Spanisch, Katalanisch, Englisch und Deutsch konsultieren. Einige Informationen über die Übersetzerin:",
    "text": "Ich habe an der Universität Pompeu Fabra (in Barcelona) Übersetzen und Dolmetschen studiert. Meine Absicht ist es, mich auf die Welt der Technologie zu spezialisieren, wie zum Beispiel audiovisuelle Übersetzung, Videospiele oder Softwarelokalisierung. Ich habe auch mein Abschlussprojekt über die Lokalisierung von Websites durchgeführt, so dass ich über einige Kenntnisse auf diesem Gebiet verfüge. Im Jahr 2017 und 2019 habe ich zwei Erasmus-Programme in deutschsprachigen Ländern (Deutschland und Österreich) gemacht. Beim Übersetzen verlasse ich mich auf CAT-Tools wie Memsource, Déjà Vu X3 oder MemoQ. Ich glaube, dass die Technologie der beste Freund des Menschen ist!"
  },
  "contact": {
    "ref": "kontakt",
    "title": "KONTAKT"
  },
  "confirmation": {
    "url": "/de/bestatigung/",
    "title": "Danke!",
    "message_1": "Deine Nachricht wurde erfolgreich gesendet.",
    "message_2": "Ich werde so bald wie möglich mit dir kontaktieren!",
    "button_back": "Zurückgehen"
  },
  "error": {
    "message": "Oops! Etwas ging schief.",
    "button": "Zur Startseite"
  },
  "form": {
    "name": "Name",
    "email": "E-Mail",
    "message": "Deine Nachricht",
    "name_error": "Der Name ist Pflicht",
    "email_error": "Die E-Mail ist Pflicht",
    "message_error": "Die Nachricht ist Pflicht",
    "submit_button": "Senden",
    "clear_button": "Löschen"
  },
  "accessibility": {
    "back_home": "Schaltfläche, mit der man zur Startseite zurückgehen kann.",
    "more": "Pfeil, der sich nach unten bewegt und anzeigt, dass es mehr Inhalt gibt.",
    "en": "Sprache auf Englisch wechseln.",
    "es": "Sprache auf Spanisch wechseln.",
    "ca": "Sprache auf Katalanisch wechseln.",
    "de": "Sprache auf Deutsch wechseln.",
    "home": "Zur Home.",
    "about": "Zur Über mich.",
    "projects": "Zur Projekte.",
    "contact": "Zur Kontakt.",
    "project_detail": "Beschreibung und Details zum Projekt, Quellcode, Demo ausprobieren...",
    "cv": "Lebenslauf herunterladen.",
    "github": "Link zu meiner Github-Seite.",
    "email": "Eine E-Mail senden.",
    "linkedin": "Link zu meiner Linkedin-Seite.",
    "image_profile": "Profilbild.",
    "sent": "Papierflugzeug-Animation beim Versenden eines Briefes.",
    "image_project": "Hauptbild des Projekts.",
    "github_link": "Link zum Quellcode auf Github.",
    "project_link": "Link zum Projekt.",
    "translations": "Link zu Übersetzungen"
  },
  "projects": {
    "ref": "projekte",
    "title": "PROJEKTE",
    "all": "ALLE",
    "demo": "Demo",
    "source_code": "Quellcode",
    "view": "Demo ansehen",
    "features": "Merkmale",
    "learned": "Was ich lernte",
    "technologies": "Technologien",
    "project_1": {
      "url": "rechner",
      "title": "Rechner",
      "main": "In diesem Projekt habe ich einen Rechner entwickelt, der einfache mathematische Operationen ausführt.",
      "features": {
        "feature_1": "Er führt grundlegende Operationen wie Addition, Subtraktion, Multiplikation und Division aus.",
        "feature_2": "Er ermöglicht Operationen mit Klammern, ganzen Zahlen und Dezimalstellen.",
        "feature_3": "Er hat Lösch- und Rücksetzfunktionen.",
        "feature_4": "Er kann Ergebnisse für die nächste Operation akkumulieren.",
        "feature_5": "Er verfügt über einen Informationsbildschirm für den Fall von Aktionen oder Fehlern.",
        "feature_6": "Wenn der Ausdruck zu lang ist, wird die Schriftgröße des Bildschirms kleiner.",
        "feature_7": "Er ist für die Arbeit mit Maus und Tastatur ausgelegt."
      },
      "learned": {
        "learned_1": "Operative Logik zu entwickeln.",
        "learned_2": "Gitterstrukturen mit CSS Grid zu erstellen.",
        "learned_3": "Mit Vanilla JavaScript auf DOM zuzugreifen und es zu manipulieren.",
        "learned_4": "Maus- und Tastaturereignisse anzuwenden.",
        "learned_5": "Visuelle Effekte mit Pseudoklassen wie \"hover\" und \"active\" zu erzeugen."
      },
      "technologies": {
        "technologies_1": "Front-End: JavaScript (ES6), HTML, CSS",
        "technologies_2": "Back-End: -"
      }
    },
    "project_2": {
      "url": "entkomme-vor-dem-tod",
      "title": "Entkomme vor dem Tod",
      "main": "Dies ist ein Horrorspiel, in dem der Protagonist und sein Freund verschleppt worden sind. Das Ziel ist es, den Freund zu retten und gemeinsam zu entkommen, bevor sie vom Mörder gefunden werden.",
      "features": {
        "feature_1": "Die Elemente hinter den Türen sind: Freund, Mörder und Ausgang.",
        "feature_2": "Diese Charaktere werden in jedem Spiel zufällig platziert.",
        "feature_3": "Man muss den Freund zuerst finden, um zu entkommen, ohne ihn wird man nicht gehen können, auch wenn der Ausgang gefunden wird.",
        "feature_4": "Im weiteren Verlauf des Spiels kommen Nachrichten zum Vorschein, die die Geschichte bestimmen.",
        "feature_5": "Dem Killer in die Arme zu laufen bedeutet, das Spiel zu verlieren."
      },
      "learned": {
        "learned_1": "Externe Quellen zu importieren.",
        "learned_2": "Mit GIMP Bilder zu manipulieren und Kompositionen zu erstellen.",
        "learned_3": "Elemente mit JavaScript bedingt zu rendern.",
        "learned_4": "Klänge im DOM hinzuzufügen."
      },
      "technologies": {
        "technologies_1": "Front-End: JavaScript (ES6), HTML, CSS",
        "technologies_2": "Back-End: -"
      }
    },
    "project_3": {
      "url": "personliche-webseite",
      "title": "Persönliche Webseite",
      "main": "Dieses Projekt ist meine erste persönliche Webseite, die ich mit dem Ziel erstellt habe, eine Plattform zu haben, auf der ich ein wenig über mich selbst sprechen und meine eigenen Projekte vorstellen kann.",
      "features": {
        "feature_1": "Es besteht aus 4 Teilen: Home, Über mich, Projekte und Kontakt.",
        "feature_2": "Die \"Über mich\" Seite enthält meine Biographie zusammen mit einem Bild von mir.",
        "feature_3": "Alle meine verfügbaren Projekte findest du unter \"Projekte\".",
        "feature_4": "Die \"Kontakt\" Seite enthält Links zu Linkedin, GitHub und meiner E-Mail.",
        "feature_5": "Diese Webseite ist responsiv, kann von jedem Gerät aus angezeigt werden."
      },
      "learned": {
        "learned_1": "Bootstrap, die eine CSS responsive Programmbibliothek ist, zu verwenden.",
        "learned_2": "Animate.css zu benutzen, eine fortgeschrittene Animationsbibliothek.",
        "learned_3": "Elemente sowohl vertikal als auch horizontal mit CSS zu zentrieren.",
        "learned_4": "Mehrere Webseiten zu erstellen, die durch Links miteinander verbunden sind.",
        "learned_5": "Medienabfragen anzuwenden, um eine responsive Seite zu erstellen, die mobilen Geräten Priorität einräumt.",
        "learned_6": "Git mit GitHub zu benutzen.",
        "learned_7": "Eine README-Datei mit Markdown zu erstellen.",
        "learned_8": "Front-End-Bereitstellungen in GitHub-Seiten durchzuführen."
      },
      "technologies": {
        "technologies_1": "Front-End: JavaScript (ES6), HTML, CSS-Bootstrap",
        "technologies_2": "Back-End: -"
      }
    },
    "project_4": {
      "url": "mathematik-spiele",
      "title": "Mathematik-Spiele",
      "main": "Es ist eine alternative Version des ursprünglichen \"10 Seconds Math\", das von Michael Jakob geschaffen wurde, um die mathematischen Fähigkeiten einer Person gegen die Zeit herauszufordern. In dieser Version ist die Zeit, die pro richtiger Antwort gewonnen wird, nicht 10 Sekunden, sie ändert sich je nach Schwierigkeitsgrad.",
      "features": {
        "feature_1": "Der Benutzer kann den Schwierigkeitsgrad des Spiels einstellen, indem er die Operationen oder sogar die maximalen Ziffern jeder Zahl begrenzt.",
        "feature_2": "Das Spiel beginnt mit 10 Sekunden für die Beantwortung der ersten Frage.",
        "feature_3": "Für jede richtige Antwort werden je nach Schwierigkeitsgrad Sekunden addiert (4 Punkte für jede Division, 3 für jede Multiplikation, 2 für Subtraktion und 1 für Addition).",
        "feature_4": "Es ist erforderlich, korrekt zu antworten, um fortzufahren.",
        "feature_5": "Das Spiel ist zu Ende, wenn die Zeit abläuft."
      },
      "learned": {
        "learned_1": "Das Projekt auf einem lokalen Node-Server auszuführen (Serve).",
        "learned_2": "Klänge aus einer externen Programmbibliothek zu importieren und sie mit dem DOM zu synchronisieren.",
        "learned_3": "Asynchrone Funktionen und \"callbacks\" zu verwenden.",
        "learned_4": "Den Inhalt auf einer Einzelseite (SPA) dynamisch umzuschreiben.",
        "learned_5": "Stile mit den Pseudoklassen \"before\" und \"hover\" hinzuzufügen.",
        "learned_6": "Eine \"gitignore\" Datei zu erstellen, um andere Dateien zu schützen.",
        "learned_7": "Eine JSON-Datei mit den Projekteinstellungen zu erstellen."
      },
      "technologies": {
        "technologies_1": "Front-End: JavaScript (ES6), HTML, CSS",
        "technologies_2": "Back-End: -"
      }
    },
    "project_5": {
      "url": "matching-spiel",
      "title": "Matching-Spiel",
      "main": "Dies ist ein traditionelles Gedächtnisspiel. Um zu gewinnen, muss man sich die Position jeder Karte merken und sie mit ihrem Gleichen abgleichen.",
      "features": {
        "feature_1": "Die Zeichen werden zufällig hinter jeder Truhe platziert.",
        "feature_2": "Der Spieler muss zwei Truhen öffnen, um sie gleich zu machen.",
        "feature_3": "Wenn die beiden Zeichen unterschiedlich sind, schließen sich die Truhen wieder und es gilt als Fehlschlag.",
        "feature_4": "Wenn die Zeichen gleich sind, bleiben sie sichtbar und es gilt als Treffer.",
        "feature_5": "Das Ziel des Spiels ist es, alle Zeichen zu paaren.",
        "feature_6": "Der Zähler zeigt sowohl Treffer als auch Fehlschläge während des Spiels an.",
        "feature_7": "Eine Zusammenfassung der Ergebnisse wird am Ende des Spiels angezeigt."
      },
      "learned": {
        "learned_1": "Das DOM mit jQuery zu manipulieren.",
        "learned_2": "Die Logik hinter einem Matching-Spiel zu verstehen.",
        "learned_3": "Den Code in verschiedene Dateien aufzuteilen, um alles organisiert zu halten."
      },
      "technologies": {
        "technologies_1": "Front-End: JavaScript (ES6) mit jQuery, HTML, CSS",
        "technologies_2": "Back-End: -"
      }
    },
    "project_6": {
      "url": "datenstruktur",
      "title": "Datenstruktur",
      "main": "Stapelspeicher (Stack) und Warteschlangen (Queue) sind zwei Arten von linearen Datenstrukturen, die im wirklichen Leben leicht zu finden sind. In diesem Projekt zeige ich beide Modelle in einer dynamischen und grafischen Darstellung.",
      "features": {
        "feature_1": "Stack (Stapelspeicher)",
        "feature_2": "Jedes Mal, wenn ein Element hinzugefügt wird, wird es auf das vorhergehende Element gesetzt.",
        "feature_3": "Das zuletzt eingegebene Element ist das zuletzt ausgegebene.",
        "feature_4": "Dies wird als LIFO (Last In - First Out) bekannt.",
        "feature_5": "Wir können das Konzept mit einem Bücher- oder Geschirrstapel vergleichen.",
        "feature_6": "Queue (Warteschlange)",
        "feature_7": "Die Elemente werden in der Reihenfolge ihres Eintreffens platziert.",
        "feature_8": "Das erste Element, das platziert wurde, ist das, das herauskommt.",
        "feature_9": "Dies wird als FIFO (First In - First Out) bekannt.",
        "feature_10": "Wir können das Konzept mit einer Supermarkt-Warteschlange vergleichen."
      },
      "learned": {
        "learned_1": "Objektorientierte Programmierung mit Konstruktor-Funktionen zu praktizieren.",
        "learned_2": "Die Theorie und Logik hinter FIFO und LIFO zu verstehen."
      },
      "technologies": {
        "technologies_1": "Front-End: JavaScript (ES6), HTML, CSS",
        "technologies_2": "Back-End: -"
      }
    },
    "project_7": {
      "url": "das-alphabetspiel",
      "title": "Das Alphabetspiel",
      "main": "Dieses Spiel ist eine Version des berühmten spanischen Spiels \"Pasapalabra\", bei dem der Kandidat für jeden Buchstaben des Alphabets in einer bestimmten Zeit eine Frage richtig beantworten muss.",
      "features": {
        "feature_1": "Das Spiel kann durch die Wahl eines männlichen oder weiblichen Avatars personalisiert werden.",
        "feature_2": "Das Spiel wird gegen die Zeit gespielt, man hat nur 150 Sekunden.",
        "feature_3": "Es wird eine Frage pro Buchstabe angezeigt, die so schnell wie möglich beantwortet werden muss.",
        "feature_4": "Wenn die Antwort richtig ist, hört der Buchstabe auf zu blinken, wird grün und es ertönt ein Erfolgston, andernfalls wird er rot und es ertönt ein Misserfolgston.",
        "feature_5": "Es ist möglich, zu einer anderen Frage überzugehen und später zurückzukommen, um sie zu beantworten.",
        "feature_6": "Das Spiel kann jederzeit abgebrochen werden.",
        "feature_7": "Sobald das Spiel beendet ist, wird der Punktestand angezeigt, und man kann wählen, ob man noch einmal spielen oder die Rangliste überprüfen möchte.",
        "feature_8": "Die Rangliste zeigt die letzten 10 besten Ergebnisse."
      },
      "learned": {
        "learned_1": "SASS zu verwenden und es in CSS zu konvertieren.",
        "learned_2": "Mixins mit SCSS zu erstellen und zu verwenden, um Funktionen zu nutzen.",
        "learned_3": "Eine fließende und responsive Schrift zu implementieren.",
        "learned_4": "DOM-Ereignisse mit jQuery zu synchronisieren.",
        "learned_5": "Elemente durch die Kombination absoluter und relativer Positionen auszurichten.",
        "learned_6": "Den Code nach dem MVC-Konzept (Model View Controller) zu organisieren und zu trennen."
      },
      "technologies": {
        "technologies_1": "Front-End: JavaScript (ES6) mit jQuery, HTML, CSS-SASS",
        "technologies_2": "Back-End: -"
      }
    },
    "project_8": {
      "url": "das-2048-spiel",
      "title": "Das 2048 Spiel",
      "main": "2048 ist ein Einzelspieler-Schiebeblockspiel, das ursprünglich von Gabriele Cirulli entwickelt wurde. Das Ziel des Spiels ist es, nummerierte Blöcke auf ein Gitter zu schieben, um sie zu kombinieren und ihre ZahlenWerte zu addieren, bis man einen einzigen mit der Nummer 2048 erhält.",
      "features": {
        "feature_1": "Zwei Blöcke mit einem Zahlenwert von 2 oder 4 werden anfänglich zufällig generiert.",
        "feature_2": "Es gibt eine bessere Chance auf eine 2 als auf eine 4.",
        "feature_3": "Das Spiel wird mit den Pfeilen auf der Tastatur gespielt, die die Richtung anzeigen, in der die Blöcke zusammenkommen.",
        "feature_4": "Wenn zwei gleiche Zahlen beim Rutschen aufeinander treffen, werden sie zu einem einzigen Block mit dem doppelten Zahlenwert addiert.",
        "feature_5": "Jedes Mal, wenn man einen Zug macht, erscheint ein neuer zufälliger Block.",
        "feature_6": "Das Spiel endet, wenn man 2048 erreicht oder wenn es kein Platz mehr gibt."
      },
      "learned": {
        "learned_1": "Die Logik und Dynamik hinter dem Spiel zu verstehen.",
        "learned_2": "Die Logik mit JavaScript-Klassen und -Prototypen zu entwickeln.",
        "learned_3": "Die Spiellogik von der DOM-Logik zu trennen.",
        "learned_4": "HTML-Elemente und Klassen dynamisch zu erstellen."
      },
      "technologies": {
        "technologies_1": "Front-End: JavaScript (ES6), HTML, CSS",
        "technologies_2": "Back-End: -"
      }
    },
    "project_9": {
      "url": "task-manager",
      "title": "Task Manager",
      "main": "Dies ist mein erstes mit React entwickeltes Projekt. Es ist ein einfacher Task-Manager, in dem man erweiterte Funktionen wie Priorität oder Datum und Uhrzeit hinzufügen kann.",
      "features": {
        "feature_1": "Neue Aufgaben können über ein Formular hinzugefügt werden.",
        "feature_2": "Neben dem Titel und der Beschreibung der Aufgabe können auch Priorität, Datum und Uhrzeit hinzugefügt werden.",
        "feature_3": "Die Aufgaben sind nach Zeit organisiert und können jederzeit gelöscht werden.",
        "feature_4": "Das Ablaufdatum ist blau, wenn es nicht abgelaufen ist, oder rot, wenn es abgelaufen ist. Wenn die Aufgabe bereits abgeschlossen ist, hat sie keine Farbe.",
        "feature_5": "Wenn eine Aufgabe als abgeschlossen markiert ist, wird sie in den abgeschlossenen Aufgabenabschnitt verschoben.",
        "feature_6": "Wenn eine Aufgabe fälschlicherweise als abgeschlossen markiert wurde, ist es möglich, die Bewegung rückgängig zu machen.",
        "feature_7": "Die Aufgaben verschwinden nicht, wenn die Seite aktualisiert wird."
      },
      "learned": {
        "learned_1": "Ein React-Projekt mit Klassenkomponenten aufzubauen.",
        "learned_2": "Module in React zu importieren und zu exportieren.",
        "learned_3": "Formulare zu validieren.",
        "learned_4": "Eindeutige Bezeichner mit UUID zu generieren.",
        "learned_5": "Den Zustand zu verwalten und Eigenschaften zwischen Komponenten zu verschieben.",
        "learned_6": "LocalStorage für die Datenremanenz zu verwenden.",
        "learned_7": "Eigenschaftstypen mit PropTypes anzugeben."
      },
      "technologies": {
        "technologies_1": "Front-End: React (JavaScript), CSS-Bootstrap",
        "technologies_2": "Back-End: -"
      }
    },
    "project_10": {
      "url": "der-ereignis-jager",
      "title": "Der Ereignis-Jäger",
      "main": "Hier kann man sich über Ereignisse in verschiedenen Kategorien und an verschiedenen Orten informieren. Es gibt auch einen Favoritenbereich, damit die Benutzer ihre Favoriten speichern und später überprüfen können.",
      "features": {
        "feature_1": "Die Suche kann nach Ereignisname, Stadt oder Kategorie erfolgen.",
        "feature_2": "Jedes Ereignis hat einen Link auf die Eventbrite-Seite, um Details anzuzeigen oder Tickets zu kaufen.",
        "feature_3": "Ereignisse können als Favoriten gespeichert und später angesehen werden.",
        "feature_4": "Favoritenereignisse werden mit jeder Ereignisliste synchronisiert und können durch ein rotes Herz unterschieden werden.",
        "feature_5": "Der Favoritenbereich verbleibt auch dann, wenn man die Seite aktualisiert."
      },
      "learned": {
        "learned_1": "Daten von einer API wie Eventbrite zu erhalten.",
        "learned_2": "Stile zur Seite mit UIKit hinzuzufügen.",
        "learned_3": "API-Aufrufe mit Axios zu machen.",
        "learned_4": "Favoriten mit neuen Suchen zu synchronisieren und sie in LocalStorage zu speichern."
      },
      "technologies": {
        "technologies_1": "Front-End: React (JavaScript), CSS-UIKit",
        "technologies_2": "Back-End: -"
      }
    },
    "project_11": {
      "url": "der-aufzug",
      "title": "Der Aufzug",
      "main": "Ein konventioneller Aufzug, den jede Person von jedem Stockwerk aus anrufen kann, in dem sie sich befindet. Der Aufzug merkt sich die Stockwerke, auf denen er anhalten muss, um Fahrgäste ein- und aussteigen zu lassen.",
      "features": {
        "feature_1": "Die Benutzer klicken auf eines der Stockwerke und emulieren so ihre eigene Position, wobei sie den Aufzugknopf drücken.",
        "feature_2": "Das System fragt nach dem Namen des Fahrgastes und nach dem Stockwerk, in das der Fahrgast gehen möchte.",
        "feature_3": "Gleichzeitig können andere Benutzer den Aufzug anrufen und er wird die Fahrten nutzen, um sie abzuholen.",
        "feature_4": "Der Aufzug wird die Fahrgäste je nach Nähe zum ursprünglichen Standort an ihrem Zielort absetzen und unterwegs neue Fahrgäste aufnehmen.",
        "feature_5": "Eine Liste aller Aufzugsaktivitäten wird angezeigt."
      },
      "learned": {
        "learned_1": "Einfache Elemente mit CSS zu zeichnen (Wolken, Sonne, Bäume, Aufzug).",
        "learned_2": "Bewegungsanimationen auf die Elemente anzuwenden.",
        "learned_3": "Die Asynchronität von Node zu demonstrieren."
      },
      "technologies": {
        "technologies_1": "Front-End: JavaScript, HTML, CSS",
        "technologies_2": "Back-End: -"
      }
    },
    "project_12": {
      "url": "spotify-express",
      "title": "Spotify Express",
      "main": "Dieses Projekt verwendet die Spotify-API, um eine Künstlersuchmaschine zu erstellen, mit der man Informationen über ihre Alben finden und sogar eine Vorschau ihrer Lieder anhören kann.",
      "features": {
        "feature_1": "Suchen werden nach Autor durchgeführt.",
        "feature_2": "Wenn ein Künstler ausgewählt wird, ist es möglich, alle seine Alben zu sehen.",
        "feature_3": "Auf jedem Album werden die darauf enthaltenen Lieder mit einer 30-sekündigen Vorschau angezeigt.",
        "feature_4": "Es ist möglich, von jedem Teil der Seite zur Hauptseite zurückzugehen."
      },
      "learned": {
        "learned_1": "Eine Seite von der Serverseite aus mit Express und Handlebars zu rendern.",
        "learned_2": "Geheime Daten wie API-Schlüssel in einem sicheren Dokument mit Dotenv zu speichern.",
        "learned_3": "Die offizielle API-Dokumentation zu lesen und zu verstehen.",
        "learned_4": "Ein Back-End-Projekt mit Heroku zu implementieren."
      },
      "technologies": {
        "technologies_1": "Front-End: Node mit Express und Handlebars, CSS",
        "technologies_2": "Back-End: -"
      }
    },
    "project_13": {
      "url": "vier-gewinnt",
      "title": "Vier gewinnt",
      "main": "Online-Spiel des traditionellen Vier gewinnt, bei dem eine Person abwechselnd gegen eine andere spielt. Das Ziel ist es, eine gerade Linie zu bilden, indem man vier Spielsteine in einer Reihe vor dem Gegner kombiniert.",
      "features": {
        "feature_1": "Das Spiel hat zwei Spielmodus: Spieler gegen Spieler oder Spieler gegen artifizielle Intelligenz (AI).",
        "feature_2": "Wenn gegen einen anderen Spieler gespielt wird, finden die Runden am gleichen Computer statt, daher ist es notwendig, dass die Spieler physisch nebeneinander stehen.",
        "feature_3": "Wenn gegen die AI gespielt wird, startet der Spieler als erster, dann macht die artifizielle Intelligenz ihren Zug.",
        "feature_4": "Die Spiel ist zu Ende, wenn keine Züge mehr ausgeführt werden können oder wenn einer der beiden Spieler es geschafft hat, vier in einer Reihe zu machen (horizontal, vertikal oder diagonal).",
        "feature_5": "Es ist jederzeit möglich, das Spiel neu zu starten oder zu beenden."
      },
      "learned": {
        "learned_1": "Mit mehrdimensionaler Array-Logik zu arbeiten.",
        "learned_2": "Eine einfache artifizielle Intelligenz zu simulieren.",
        "learned_3": "Routen mit React Router zu erstellen.",
        "learned_4": "Mit Eslint einen konsistenten und \"sauberen\" Code zu halten."
      },
      "technologies": {
        "technologies_1": "Front-End: React (JavaScript), CSS",
        "technologies_2": "Back-End: -"
      }
    },
    "project_14": {
      "url": "das-entengeschaft",
      "title": "Das Entengeschäft",
      "main": "Dies ist ein E-Commerce SPA, das Informationen über Gummienten zeigt. Dieses Projekt wurde während des Skylab Bootcamps auf 3 verschiedene Arten entwickelt, wobei der Schwerpunkt auf kontinuierlichem Refactoring lag.",
      "features": {
        "feature_1": "Man braucht ein Konto, um auf das Geschäft zuzugreifen.",
        "feature_2": "Registrierungs- und Anmeldefunktionen sind enthalten.",
        "feature_3": "Wenn eine Suche durchgeführt wird, erscheinen alle Enten, die den Kriterien entsprechen.",
        "feature_4": "Man kann mehr Details zu jedem Produkt sehen, indem man auf das Bild klickt.",
        "feature_5": "Es gibt einen Favoritenbereich mit dem man die ausgewählten Produkte speichern kann."
      },
      "learned": {
        "learned_1": "Code kontinuierlich zu refaktorisieren.",
        "learned_2": "Eine Anmeldung und Registrierung zu entwickeln, indem eine API verwendet wurde, die als Datenbank funktioniert.",
        "learned_3": "Fehler durch die Verwendung von Komponenten zu behandeln.",
        "learned_4": "Die Logik nach Belangen zu trennen.",
        "learned_5": "Die Anwendung von der Serverseite aus mit Express und Pug zu rendern."
      },
      "technologies": {
        "technologies_1": "Front-End 1: Node mit Express und Pug, CSS-SASS",
        "technologies_2": "Front-End 2: React (JavaScript), CSS-SASS",
        "technologies_3": "Front-End 3: JavaScript, HTML, CSS-SASS",
        "technologies_4": "Back-End: -"
      }
    },
    "project_15": {
      "url": "die-welt-fressen",
      "title": "Die Welt fressen",
      "main": "Dies ist ein Gruppenprojekt, das während des Skylab Bootcamps entwickelt wurde. Die Anwendung zeigt Informationen über verschiedene Arten von Restaurants in vielen Orten der Welt. Aufgrund einer unerwarteten Zugangssperre nach Spanien ist es notwendig, von einem anderen Land (z.B. USA) aus über ein VPN zuzugreifen.",
      "features": {
        "feature_1": "Benutzer können nach Stadt, Art der Küche oder Restaurantname suchen, auch wenn sie nicht eingeloggt sind.",
        "feature_2": "Man kann die Details jedes Restaurants sehen, indem man auf das Bild klicken.",
        "feature_3": "Der Favoritenbereich ist nur für angemeldete Benutzer verfügbar.",
        "feature_4": "Wenn sich der Benutzer einloggt, speichert die Webseite die zuletzt besuchte Seite.",
        "feature_5": "Wenn sich der Benutzer ausloggt, werden alle gespeicherten Daten gelöscht, mit Ausnahme der Favoriten."
      },
      "learned": {
        "learned_1": "In einem Team von drei Personen zu arbeiten.",
        "learned_2": "GitHub-Branches und Pull Requests zu verwalten.",
        "learned_3": "Einen Timer mit React zu erstellen.",
        "learned_4": "Weitere Funktionen nur für registrierte Benutzer aufzunehmen.",
        "learned_5": "Das Projekt mit UML zu dokumentieren.",
        "learned_6": "Mit einem VPN auf eine API mit Länderbeschränkungen zuzugreifen."
      },
      "technologies": {
        "technologies_1": "Front-End: React (JavaScript), CSS-SASS",
        "technologies_2": "Back-End: -"
      }
    },
    "project_16": {
      "url": "wheely",
      "title": "Wheely",
      "main": "Dies ist mein letztes Projekt und mein erstes Full Stack-Projekt, das im Skylab Bootcamp gemacht wurde. Die Idee entspringt einem echten Bedarf in Fahrschulen, die Aufgabe der Fahrstundenbuchung zu beschleunigen. Auf diese Weise können sowohl die Schüler als auch die Lehrer die Aufgabe 100% online erledigen, ebenso wie die Überwachung der Schüler, die Kontrolle der verfügbaren Kredite, usw.",
      "features": {
        "feature_1": "Studenten, Lehrer und das administrative Personal haben Konten mit unterschiedlichen Funktionalitäten.",
        "feature_2": "Studenten:",
        "feature_3": "Sie können seine persönlichen Daten und verfügbaren Kredite einsehen und bearbeiten.",
        "feature_4": "Sie können Fahrstunden bei jedem Lehrer, an jedem Tag und zu jeder Uhrzeit buchen.",
        "feature_5": "Sie können eine Reservierung 24 Stunden im Voraus stornieren.",
        "feature_6": "Sowohl Lehrer als auch Studenten erhalten bei jeder Buchung oder Stornierung einer Fahrschule eine Bestätigungs-E-Mail.",
        "feature_7": "Sie können seine anhängigen Buchungen und abgeschlossenen Fahrstunden einsehen.",
        "feature_8": "Sie können seinen Fortschritt mit der Beurteilung der Lehrer vergleichen.",
        "feature_9": "Demo-Konto: ana@ana.com // Kennwort: 123.",
        "feature_10": "Lehrer:",
        "feature_11": "Sie können seine persönlichen Daten einsehen und bearbeiten.",
        "feature_12": "Sie können seine Buchungen einsehen und sortieren.",
        "feature_13": "Nach jeder Fahrstunde gibt der Lehrer dem Studenten eine Beurteilung.",
        "feature_14": "Sie können seinen Arbeitszeitplan konsultieren, aber nicht verändern.",
        "feature_15": "Demo-Konto: toni@toni.com // Kennwort: 123.",
        "feature_16": "Administrator:",
        "feature_17": "Er kann jeden Benutzer hinzufügen, modifizieren, konsultieren und löschen.",
        "feature_18": "Er kann den Studenten Kredite hinzufügen.",
        "feature_19": "Er kann den Arbeitszeitplan jedes Lehrers organisieren und bearbeiten.",
        "feature_20": "Er kann auf alle getätigten Buchungen zugreifen.",
        "feature_21": "Er kann den Fortschritt aller Studenten sehen. Demo-Konto: admin@admin.com // Kennwort: 123."
      },
      "learned": {
        "learned_1": "Ein Back-End mit Node Express zu entwickeln.",
        "learned_2": "Alle Routen auf einem Router zu gruppieren.",
        "learned_3": "Eine Datenbank mit MongoDB zu verknüpfen und sie mit Mongoose zu schematisieren.",
        "learned_4": "React Hooks im Front-End zu benutzen.",
        "learned_5": "TDD-Tests im Back-End mit Mocha Chai und im Front-End mit Jest durchzuführen.",
        "learned_6": "E-Mails mit Hilfe der Nodemailer-Bibliothek zu senden.",
        "learned_7": "Buchungen, Stornierungen und Echtzeit-Kalender mit Moment zu verwalten.",
        "learned_8": "Einen kreditbasierten Zahlungsdienst zu emulieren.",
        "learned_9": "Ein Hamburger-Menü auf Mobilgeräten anzuzeigen.",
        "learned_10": "Das Front-End mit dem Back-End zu verbinden, die für die Produktion entwickelt werden.",
        "learned_11": "Technische und funktionelle Dokumentation zu schreiben.",
        "learned_12": "Den Vertrag und die Fristen zu respektieren (zweieinhalb Wochen), sowie mit Erwartungen, Stressbewältigung und Priorisierung zu handhaben.",
        "learned_13": "Das Projekt öffentlich zu präsentieren."
      },
      "technologies": {
        "technologies_1": "Front-End: React Hooks (JavaScript), CSS-SASS, Mocha Chai",
        "technologies_2": "Back-End: Node mit Express, MongoDB, Test mit Jest"
      }
    },
    "project_17": {
      "url": "kasaz",
      "title": "Kasaz",
      "main": "Kasaz ist eine Online-Immobilienagentur, bei der man nach Wohnungen suchen kann, indem man seine Suchkriterien anpasst.",
      "features": {
        "feature_1": "Benutzer können nach Wohnungen suchen, indem sie nach Kombinationen der folgenden Kriterien sortieren können:",
        "feature_2": "- Standort.",
        "feature_3": "- Mindest- und/oder Höchstpreis.",
        "feature_4": "- Quadratmeter.",
        "feature_5": "- Zimmer.",
        "feature_6": "- Badezimmer."
      },
      "learned": {
        "learned_1": "Ein Full Stack-Projekt in nur 4 Tagen zu entwickeln.",
        "learned_2": "Die MongoDB-Datenbank mit Compass und Terminal zu importieren und zu exportieren.",
        "learned_3": "Ordner als NPM-Module zu importieren.",
        "learned_4": "Anweisungen zu schreiben, um das Projekt lokal durchzuführen und zu testen.",
        "learned_5": "Multifilter-Logik zu kombinieren."
      },
      "technologies": {
        "technologies_1": "Front-End: React Hooks (JavaScript), CSS-SASS, Test Mocha Chai",
        "technologies_2": "Back-End: Node mit Express, MongoDB, Test mit Jest"
      }
    },
    "project_18": {
      "url": "github-repositorien",
      "title": "Github-Repositorien",
      "main": "Dieses Projekt zeigt Informationen über die Repositories und öffentlichen Daten aller GitHub-Benutzer an.",
      "features": {
        "feature_1": "Wenn man einen GitHub-Benutzernamen eingibt, werden die folgenden Benutzerdetails angezeigt:",
        "feature_2": "- Avatar, Vor- und Nachname, Benutzername und Beschreibung.",
        "feature_3": "- Eine Liste aller öffentlichen Repositories.",
        "feature_4": "- Links zu den GitHubs der jeweiligen Repositorien.",
        "feature_5": "- Stars und Forks."
      },
      "learned": {
        "learned_1": "Die GitHub-API zu benutzen und die offizielle Dokumentation zu verstehen.",
        "learned_2": "API-Aufrufe mit AJAX zu machen."
      },
      "technologies": {
        "technologies_1": "Front-End: JavaScript Vanilla, HTML, CSS-SASS",
        "technologies_2": "Back-End: -"
      }
    },
    "project_19": {
      "url": "kanban",
      "title": "Kanban",
      "main": "Bei diesem Full Stack-Projekt wird ein Kanban durchgeführt. Kanban ist ein visuelles System zur Verwaltung von Arbeit und Aufgaben, die in einem Prozess ablaufen. Es ist einfach zu verwenden, Aufgaben werden gezogen und dann in der gewünschten Spalte abgelegt.",
      "features": {
        "feature_1": "Es arbeitet mit einem Benutzersystem, man muss sich anmelden, um darauf zuzugreifen.",
        "feature_2": "Jeder Benutzer hat 4 Spalten in seinem Konto, um die Aufgaben zu verwalten: TODO (ausstehend), DOING (im Prozess), REVIEW (zu überarbeiten) und DONE (abgeschlossen).",
        "feature_3": "Um den Status einer Aufgabe zu ändern, muss man sie nur in die gewünschte Spalte ziehen.",
        "feature_4": "Es ist auch möglich, die Aufgaben innerhalb der gleichen Spalte zu organisieren.",
        "feature_5": "Jede Aufgabe kann einzeln gelöscht werden.",
        "feature_6": "Die Spalte für abgeschlossene Aufgaben enthält eine Entleerungsfunktion, um sie alle auf einmal zu entfernen."
      },
      "learned": {
        "learned_1": "Drag and Drop mit React zu implementieren.",
        "learned_2": "Fortgeschrittene React Hooks-Funktionen (useRef, usEffect, useState) zu verwenden.",
        "learned_3": "Ein Benutzersystem zu erstellen."
      },
      "technologies": {
        "technologies_1": "Front-End: React Hooks (JavaScript), CSS-SASS",
        "technologies_2": "Back-End: Node mit Express, MongoDB"
      }
    },
    "project_20": {
      "url": "canvas",
      "title": "Canvas",
      "main": "Canvas ist eine Vorlage für die strategische Unternehmensführung zur Dokumentation von Unternehmensmodellen. Es ist ein visuelles Diagramm mit Elementen, die das Nutzenversprechen, die Infrastruktur, die Kunden und die Finanzen eines Unternehmens oder eines Produkts beschreiben.",
      "features": {
        "feature_1": "Es wird in strategischen Unternehmensführungen zur Dokumentation von Unternehmensmodellen verwendet.",
        "feature_2": "Es handelt sich um einen CRUD: man kann Notizen erstellen, lesen, bearbeiten und löschen.",
        "feature_3": "Eine Erklärung zu jedem Abschnitt ist verfügbar, wenn man auf das \"?\" oben klickt.",
        "feature_4": "Das Webdesign ist responsiv, kompatibel mit der Größe aller Geräte.",
        "feature_5": "Das Webdesign ist auch anpassungsfähig, jeder Behälter passt sich seinem Inhalt an."
      },
      "learned": {
        "learned_1": "Modale Fenster mit React zu erstellen.",
        "learned_2": "Mit einer Kombination aus Grid und Flex völlig responsiv zu gestalten.",
        "learned_3": "Die Nützlichkeit und Funktionsweise von Canvas zu verstehen."
      },
      "technologies": {
        "technologies_1": "Front-End: React Hooks (JavaScript), CSS-SASS, Test Mocha Chai",
        "technologies_2": "Back-End: Node mit Express, MongoDB, Test mit Jest"
      }
    },
    "project_21": {
      "url": "das-saftgeschaft",
      "title": "Das-Saftgeschäft",
      "main": "Dieses Projekt ist eine Simulation eines Saftgeschäfts. Das Ziel war es, React Redux mit Sagas und Thunks zu lernen.",
      "features": {
        "feature_1": "Es handelt sich um einen CRUD, der Benutzer kann: ",
        "feature_2": "- Produkte erstellen.",
        "feature_3": "- Produkte konsultieren.",
        "feature_4": "- Produkte ändern.",
        "feature_5": "- Produkte löschen."
      },
      "learned": {
        "learned_1": "Den Status mit React Redux global zu verwalten",
        "learned_2": "Die Asynchronität von Redux mit Redux-Thunk- und Redux-Saga-Middlewares zu kontrollieren.",
        "learned_3": "Warnfenster mit Sweetalert2 einfach anzuzeigen.",
        "learned_4": "Ein Back-End mit einer gefälschten REST-API mit JSON-Server zu emulieren."
      },
      "technologies": {
        "technologies_1": "Front-End: React Hooks Redux (JavaScript), CSS-SASS",
        "technologies_2": "Back-End: mit JSON-Server emuliert"
      }
    },
    "project_22": {
      "url": "das-paradies-hotel",
      "title": "Das Paradies-Hotel",
      "main": "Das Paradies-Hotel ist ein Beispiel für Unternehmensseiten für Hotels, auf denen die Informationen über das Hotel und die Zimmerdetails angezeigt werden.",
      "features": {
        "feature_1": "Die Seite hat eine Navigationsleiste mit den verschiedenen Abschnitten, zu denen man gelangen kann.",
        "feature_2": "Wenn man auf einen Zimmer klickt, öffnet sich eine weitere Seite mit dem Detail."
      },
      "learned": {
        "learned_1": "Eine serverseitig gerenderte Webseite mit Gatsby zu erstellen.",
        "learned_2": "GraphQL-Abfragen mit einem einzigen API-Aufruf auszuführen.",
        "learned_3": "CSS in der Komponente mit Styled-Components zu implementieren.",
        "learned_4": "SEO zu verbessern",
        "learned_5": "Ein CMS zu verwenden, um Seiteninformationen mit DatoCMS zu speichern und zu lesen",
        "learned_6": "Die Anwendung auf Netlify zu implementieren.",
        "learned_7": "Seitenleistung und SEO zu analysieren und zu prüfen."
      },
      "technologies": {
        "technologies_1": "Front-End: Gatsby mit React (JavaScript), GraphQL, CSS-Styled-Components, DatoCMS",
        "technologies_2": "Back-End: -"
      }
    },
    "project_23": {
      "url": "mehrsprachiges-portfolio",
      "title": "Mehrsprachiges Portfolio",
      "main": "Dies ist mein Portfolio, hier findet man alle meine persönlichen Projekte sowie deren Details, Links zu Demos, Quellcode, meine Biographie oder meinen Lebenslauf. Die Webseite wurde in 4 Sprachen übersetzt, da sie ausdrücklich für die Mitarbeit am Bachelor-Abschlussprojekt meiner Schwester über technologische Übersetzungen entwickelt wurde.",
      "features": {
        "feature_1": "Die Webseite ist mehrsprachig: Englisch, Spanisch, Katalanisch und Deutsch.",
        "feature_2": "Die Übersetzungen wurden von Yolanda Moreno bereitgestellt.",
        "feature_3": "Das Design basiert auf einer einzigen Seite, auf der meine Biographie, meine Projekte und meine Kontaktdaten angezeigt werden.",
        "feature_4": "Mein Lebenslauf kann in allen vier Sprachen heruntergeladen werden.",
        "feature_5": "Zu jedem Projekt gibt es Informationen darüber, welche Merkmale es hat, was ich bei der Entwicklung gelernt habe, Links zum Quellcode und eine Demo.",
        "feature_6": "Du kannst mit mir Kontakt aufnehmen, indem du das Formular in der Kontaktbereich ausfüllst oder auch per Post oder soziale Netzwerke."
      },
      "learned": {
        "learned_1": "Ein Projekt vorzubereiten, das in vier Sprachen übersetzt werden soll.",
        "learned_2": "Seiten mittels einer Vorlage dynamisch zu erstellen.",
        "learned_3": "Statische und dynamische Abfragen mit GraphQL durchzuführen.",
        "learned_4": "Mit Hilfe des Intersection Observer den aktiven Menübereich auszuwählen, wenn ich durch die Seite blättere.",
        "learned_5": "Ein Formular hinzuzufügen, das mit einem Back-End verbunden ist, um E-Mails zu versenden.",
        "learned_6": "Optionen zum Herunterladen von Dateien hinzuzufügen.",
        "learned_7": "Aspekte der Barrierefreiheit zu berücksichtigen.",
        "learned_8": "Die Seite in Google mit Google Search Console zu indexieren und für jedes Projekt einen anderen SEO anzugeben."
      },
      "technologies": {
        "technologies_1": "Front-End: Gatsby mit React (JavaScript), GraphQL, CSS-SASS",
        "technologies_2": "Back-End: Node mit Express"
      }
    },
    "project_24": {
      "url": "digitales-haustier",
      "title": "Digitales Haustier",
      "main": "Das Projekt ist eine angepasste Version eines Tamagotchi, das portable virtuelle Haustier der 90er Jahre, das in einem Kurs von Brian Holt bei Frontend Masters gebaut wurde.\n Dieses wird mit Vanilla Javascript entwickelt und das Ziel ist es, den Code mit anderen Technologien zu refaktorisieren.\n Ich beschloss, es mit React zu erstellen, verzichtete aber auf die Verwendung von create-react-app und erstellte ein Projekt von Anfang an mit Webpack, Redux und TypeScript.",
      "features": {
        "feature_1": "Das Haustier hat Schlafzyklen, die von der Länge des Tages und der Nacht abhängen, mit denen der Benutzer nicht interagieren kann.",
        "feature_2": "Von Zeit zu Zeit gibt es an, dass es hungrig ist und bittet um Nahrung.",
        "feature_3": "Sobald es gefüttert ist, wird es sich entlasten und darauf warten, geputzt zu werden.",
        "feature_4": "Wenn beide Bedürfnisse nicht in kurzer Zeit erfüllt werden, wird das Haustier sterben.",
        "feature_5": "Man kann jederzeit in den Regen- und Normalmodus wechseln."
      },
      "learned": {
        "learned_1": "Ein Projekt mit Webpack von Anfang an zu beginnen.",
        "learned_2": "CSS- und SCSS-Module mit Webpack zu konfigurieren.",
        "learned_3": "TypeScript mit Webpack zu konfigurieren.",
        "learned_4": "JavaScript 'closures' mit der Funktion 'requestsAnimationFrame' besser zu verstehen.",
        "learned_5": "Fortgeschrittene Animationen mit Sprites zu erstellen.",
        "learned_6": "Code mit Vanilla JavaScript zu erstellen und ihn mit TypeScript und Redux in React umzuwandeln."
      },
      "technologies": {
        "technologies_1": "Front-end: React mit TypeScript, von Anfang an konfiguriert mit Webpack, Redux und SCSS-Modulen.",
        "technologies_2": "Front-end: JavaScript Vanilla",
        "technologies_3": "Back-end: -"
      }
    }
  }
}
