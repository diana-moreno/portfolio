{
  "home": {
    "title": "INICIO",
    "greeting": "Hola, soy ",
    "author": "Diana Moreno",
    "author_position": "Soy desarrolladora web full stack.",
    "view_more": "Ver más"
  },
  "about": {
    "title": "SOBRE MÍ",
    "concepts_key": {
      "concept_key_1": {
        "title": "Diseño adaptativo",
        "description": "El móvil gana cada día más protagonismo frente al ordenador. Por esa razón, procuro que mis proyectos sean compatibles con todos los dispositivos, siguiendo las tendencias."
      },
      "concept_key_2": {
        "title": "Simplicidad",
        "description": "Para mí, el diseño es una pieza clave en un proyecto, por ello apuesto por interfaces atractivas para el usuario sin perder la simplicidad. Menos es más."
      },
      "concept_key_3": {
        "title": "Buenas prácticas",
        "description": "Tanto para el trabajo en equipo como individual, considero muy importante construir un código de calidad: organizado, sencillo, testado y reutilizable."
      },
      "concept_key_4": {
        "title": "Últimas tecnologías",
        "description": "Me intereso por las nuevas tecnologías y apuesto por la formación continua. La última tecnología que he aprendido ha sido Gatsby, muy de moda hoy en día."
      }
    },
    "my_story": { 
      "title": "Mi historia", 
      "section_1": "Me gradué en Administración y Dirección de Empresas en la Universidad de Barcelona en 2012. Una vez finalizados mis estudios, inicié mi trayectoria profesional como contable y fui creciendo hasta alcanzar el puesto de Team manager.",
      "section_2": "Seis años después, me di cuenta de que el ámbito de la contabilidad ya no me satisfacía. Necesitaba un nuevo desafío donde poder seguir creciendo como profesional.",
      "section_3": "La programación comenzó a llamarme la atención cada vez más y finalmente decidí seguir ese camino. De modo que, a principios de 2019, renuncié a mi trabajo y comencé a aprender por mi cuenta. Además, de septiembre a diciembre de ese mismo año, estudié programación en un Bootcamp en Skylab para consolidar y ampliar mis conocimientos."
    },
    "nowadays": {
      "title":"Actualmente",
      "section_1": "Hoy en día trabajo para Interficie, una compañía que desarrolla páginas de comercio electrónico y soluciones creativas para grandes empresas.",
      "section_2": "El lenguaje que utilizo es JavaScript y mi stack tecnológico es el siguiente: React, Gatsby, Node.js, SQL y Express."
    },
    "passions": {
      "title": "Pasiones", 
      "section_1": "A parte de la programación, procuro seguir un estilo de vida saludable: presto mucha atención a lo que como y hago ejercicio regularmente. Además, me encanta bailar, hasta el punto de haber formado parte de una compañía de baile de salsa amateur."
    }
  },
  "contact": {
    "title":"CONTACTO"
  },
  "confirmation": {
    "url": "confirmacion",
    "title": "¡Gracias!",
    "message_1": "Tu mensaje se ha enviado correctamente.",
    "message_2": "¡Contactaré contigo lo antes posible!",
    "button_back": "Volver atrás"
  },
  "form": {
    "name": "Nombre",
    "email": "Correo electrónico",
    "message": "Tu mensaje",
    "name_error": "El nombre es obligatorio",
    "email_error": "El correo electrónico es obligatorio",
    "message_error": "El mensaje es obligatorio",
    "submit_button": "Enviar",
    "clear_button": "Borrar"
  },
  "projects": {
    "title": "PROYECTOS",
    "all": "TODOS", 
    "demo": "Demo",
    "source_code": "Código fuente",
    "features": "Características",
    "learned": "Qué he aprendido",
    "technologies": "Tecnologías",
    "project_1": {
      "url": "calculadora",
      "title": "Calculadora",
      "main": "En este proyecto he desarrollado una calculadora que realiza operaciones matemáticas sencillas.",
      "features": {
        "feature_1": "Realiza operaciones básicas como suma, resta, multiplicación y división.",
        "feature_2": "Permite operaciones con paréntesis, números enteros y decimales.",
        "feature_3": "Dispone de función de borrado y de reset.",
        "feature_4": "Puede acumular resultados para la siguiente operación.",
        "feature_5": "Dispone de una pantalla informativa en caso de acciones o errores.",
        "feature_6": "Si la expresión es demasiado larga, el tamaño de la letra de la pantalla se hace pequeña.",
        "feature_7": "Está preparado para funcionar tanto con el ratón como con el teclado."
      },
      "learned": {
        "learned_1": "A desarrollar lógica operacional.",
        "learned_2": "A crear estructuras de cuadrícula con CSS Grid.",
        "learned_3": "A acceder y manipular el DOM con JavaScript Vanilla.",
        "learned_4": "A aplicar eventos de ratón y de teclado.",
        "learned_5": "A crear efectos visuales con pseudoclases como \"hover\" y \"active\"."
      },
      "technologies" : {
        "technologies_1": "Front-end: JavaScript (ES6), HTML, CSS",
        "technologies_2": "Back-end: -"
      }
    },
    "project_2": {
      "url": "escapa-de-la-muerte",
      "title": "Escapa de la muerte",
      "main": "Este es un juego de horror en el que el protagonista y su amigo han sido secuestrados. El objetivo es rescatar al amigo y conseguir escapar juntos antes de que el asesino les encuentre.",
      "features": {
        "feature_1": "Los elementos detrás de las puertas son: amigo, asesino y salida.",
        "feature_2": "Los personajes se colocan aleatoriamente en cada partida.",
        "feature_3": "Es necesario encontrar primero al amigo para poder escapar, no será posible salir sin él aunque se encuentre la salida.",
        "feature_4": "Según avanza el juego, aparecen mensajes que guían la historia.",
        "feature_5": "Toparse con el asesino significa perder el juego."
      },
      "learned": {
        "learned_1": "A importar fuentes externas.",
        "learned_2": "A manipular imágenes y crear composiciones con GIMP.",
        "learned_3": "A renderizar condicionalmente elementos con JavaScript.",
        "learned_4": "A añadir sonidos en el DOM."
      },
      "technologies" : {
        "technologies_1": "Front-end: JavaScript (ES6), HTML, CSS",
        "technologies_2": "Back-end: -"
      }
    },
    "project_3": {
      "url": "pagina-personal",
      "title": "Página personal",
      "main": "Este proyecto es mi primera página web personal, creada con la finalidad de disponer de un espacio donde poder hablar un poco de mí y exponer mis propios proyectos.",
      "features": {
        "feature_1": "Se compone de cuatro secciones: inicio, sobre mi, proyectos y contacto.", 
        "feature_2": "La página \"Sobre mi\" cuenta con una imagen mía y mi biografía.",
        "feature_3": "Desde \"Proyectos\" puede accederse a todos mis proyectos disponibles.",
        "feature_4": "La página \"Contacto\" tiene enlaces a Linkedin, GitHub y mi correo electrónico.",
        "feature_5": "Es responsiva, puede visualizarse desde cualquier dispositivo."
      },  
      "learned": {
        "learned_1": "A utilizar Bootstrap, una librería responsiva de CSS.",
        "learned_2": "A utilizar Animate.css, una librería de animaciones avanzadas.",
        "learned_3": "A centrar elementos tanto vertical como horizontalmente con CSS.",
        "learned_4": "A crear varias páginas interconectadas con enlaces.",
        "learned_5": "A aplicar media queries para crear una página responsiva priorizando los dispositivos móviles.",
        "learned_6": "A utilizar Git con GitHub.",
        "learned_7": "A crear un fichero README con Markdown.",
        "learned_8": "A realizar despliegues de front-end en GitHub-pages."
      },
      "technologies" : {
        "technologies_1": "Front-end: JavaScript (ES6), HTML, CSS-Bootstrap",
        "technologies_2": "Back-end: -"
      }
    },
    "project_4": {
      "url": "juego-matematico",
      "title": "Juego matemático",
      "main": "Esta es una versión alternativa al juego original \"10 Seconds Math\", creado por Michael Jakob con la finalidad de desafiar las habilidades matemáticas de una persona a contrarreloj. En esta versión, el tiempo añadido por respuesta correcta no son 10 segundos, sino que varía dependiendo de la dificultad.",
      "features": {
        "feature_1": "El usuario puede configurar la dificultad del juego limitando operaciones o las cifras máximas de cada número.",
        "feature_2": "El juego comienza con 10 segundos para responder a la primera pregunta.",
        "feature_3": "Cada respuesta correcta suma segundos dependiendo de la dificultad (4 puntos por cada división, 3 por cada multiplicación, 2 por resta y 1 por suma).",
        "feature_4": "Es necesario responder correctamente para poder continuar.",
        "feature_5": "El juego termina cuando se agota el tiempo."
      },
      "learned": {
        "learned_1": "A correr el proyecto en un servidor local de Node.js (Serve).",
        "learned_2": "A importar sonidos de una librería externa y sincronizarlos con el DOM.",
        "learned_3": "A utilizar funciones asíncronas y \"callbacks\".",
        "learned_4": "A reescribir el contenido dinámicamente en una sola página (SPA).",
        "learned_5": "A añadir estilos con las pseudoclases \"before\" y \"hover\".",
        "learned_6": "A crear un fichero \"gitignore\" para proteger otros ficheros.",
        "learned_7": "A crear un fichero JSON con la configuración del proyecto."
      },
      "technologies" : {
        "technologies_1": "Front-end: JavaScript (ES6), HTML, CSS",
        "technologies_2": "Back-end: -"
      }
    },
    "project_5": {
      "url": "juego-de-parejas",
      "title": "Juego de parejas",
      "main": "Juego de parejas es un juego tradicional de memoria. Para ganar, se necesita recordar la posición de cada carta y emparejarla con su igual.",
      "features": {
        "feature_1": "Detrás de cada cofre se colocan aleatoriamente los personajes.",
        "feature_2": "El jugador tiene que abrir dos cofres buscando que sean iguales.",
        "feature_3": "Si los dos personajes son diferentes, los cofres se volverán a cerrar y se sumará un fallo.",
        "feature_4": "Si los personajes son iguales, se quedarán visibles y se sumará un acierto.",
        "feature_5": "La finalidad del juego es conseguir emparejar todos los personajes.",
        "feature_6": "El contador informa de aciertos y fallos durante el juego.",
        "feature_7": "Al final del juego aparece un resumen de los resultados."
      },
      "learned": {
        "learned_1": "A manipular el DOM con jQuery.",
        "learned_2": "A entender la lógica detrás de un juego de parejas.",
        "learned_3": "A separar el código en diferentes ficheros para mantener un orden."
      },
      "technologies" : {
        "technologies_1": "Front-end: JavaScript (ES6) con jQuery, HTML, CSS",
        "technologies_2": "Back-end: -"
      }
    },
    "project_6": {
      "url": "estructura-de-datos",
      "title": "Estructura de Datos",
      "main": "Las pilas (stacks) y las colas (queues) son dos tipos de estructura de datos lineal que podemos encontrar fácilmente en la vida real. En este proyecto, estoy mostrando ambos modelos en una representación gráfica y dinámica.",
      "features": {
        "feature_1": "Stack (pila)",
        "feature_2": "Cada vez que se añade un elemento, se coloca encima del anterior.",
        "feature_3": "El último elemento que ha entrado es el que sale.",    
        "feature_4": "Se conoce como LIFO (en inglés “último en entrar, primero en salir”).",
        "feature_5": "Podemos asemejar el concepto con una pila de libros o de platos.",
        "feature_6": "Queue (cola)",
        "feature_7": "Los elementos se colocan en orden de llegada.",
        "feature_8": "El primer elemento que se ha colocado, es el que sale.",
        "feature_9": "Se conoce como FIFO (en inglés “primero en entrar, primero en salir”)",
        "feature_10": "Podemos asemejar el concepto con una cola de supermercado."
      },
      "learned": {
        "learned_1": "A practicar la programación orientada a objetos con el método constructor",
        "learned_2": "A entender la teoría y la lógica detrás de los conceptos FIFO Y LIFO."
      },
      "technologies" : {
        "technologies_1": "Front-end: JavaScript (ES6), HTML, CSS",
        "technologies_2": "Back-end: -"
      }
    },
    "project_7": {
      "url": "pasapalabra",
      "title": "Pasapalabra",
      "main": "Este juego es una versión del famoso juego español \"Pasapalabra\", en el que el concursante tiene que acertar una pregunta por cada letra del alfabeto en un tiempo determinado.",
      "features": {
        "feature_1": "La partida se puede personalizar eligiendo un avatar femenino o masculino.",
        "feature_2": "El juego transcurre a contrarreloj, se dispone únicamente de 150 segundos.",
        "feature_3":"Se muestra una pregunta por letra y se debe contestar lo más rápido posible.",
        "feature_4": "Si la respuesta es correcta, la letra deja de parpadear, se vuelve verde y se emite un sonido de acierto, sino, se vuelve roja y se emite un sonido de fallo.",
        "feature_5": "Es posible pasar a otra pregunta y volver después para contestar.",
        "feature_6": "El juego puede ser cancelado en cualquier momento.",
        "feature_7": "Una vez finalizado el juego, se muestra la puntuación y aparece la opción de volver a jugar o ver el ranking.",
        "feature_8":"El ranking muestra los últimos 10 mejores resultados."
      },
      "learned": {
        "learned_1": "A utilizar SASS y convertirlo a CSS.",
        "learned_2": "A construir y utilizar mixins con SCSS para utilizar funciones.",
        "learned_3": "A implementar tipografía fluida y responsiva.",
        "learned_4": "A sincronizar eventos del DOM con jQuery.",
        "learned_5": "A alinear elementos con la combinación de posiciones absolutas y relativas.",
        "learned_6": "A organizar y separar el código siguendo el MVC (modelo, vista, controlador)."
      }, 
      "technologies" : {
        "technologies_1": "Front-end: JavaScript (ES6) con jQuery, HTML, CSS-SASS",
        "technologies_2": "Back-end: -"
      }
    },  
    "project_8": {
      "url": "juego-2048",
      "title": "Juego 2048",
      "main": "2048 es un juego de bloques deslizantes para un jugador, diseñado originalmente por Gabriele Cirulli. El objetivo del juego es deslizar bloques numerados en una cuadrícula para combinarlos, sumando sus valores hasta obtener uno solo con el número 2048.",
      "features": {
        "feature_1": "Inicialmente se generan dos bloques con valor 2 o 4 de manera aleatoria.",
        "feature_2": "Hay más probabilidad de que aparezca un 2 que un 4.",
        "feature_3": "El juego se maneja con las flechas del teclado, indicando la dirección hacia donde se van a unir las bloques.",
        "feature_4": "Si al desplazarse coincide que dos números son iguales, se sumarán formando un solo bloque con el doble de valor.",
        "feature_5": "Cada vez que se realiza un movimiento, aparece un bloque aleatorio nuevo.",
        "feature_6": "El juego finaliza cuando se alcanza el 2048 o no quede espacio disponible."  
      },
      "learned": {
        "learned_1": "A entender la lógica y la dinámica detrás del juego.",
        "learned_2": "A desarrollar la lógica con clases y prototipos de JavaScript.",
        "learned_3": "A separar la lógica propia del juego de la del DOM.",
        "learned_4": "A crear elementos de HTML y clases dinámicamente."
      }, 
      "technologies" : {
        "technologies_1": "Front-end: JavaScript (ES6), HTML, CSS",
        "technologies_2": "Back-end: -"
      }
    },
    "project_9": {
      "url": "gestor-de-tareas",
      "title": "Gestor de tareas",
      "main": "Este es mi primer proyecto desarrollado con React. Se trata de un gestor de tareas sencillo en el que se pueden añadir funciones avanzadas como prioridad o fecha y hora de la tarea.",
      "features": {
        "feature_1": "Se pueden añadir tareas nuevas a través de un formulario.",
        "feature_2": "Además del título y la descripción de la tarea, se puede añadir prioridad, fecha y hora.",
        "feature_3": "Las tareas se ordenan por tiempo y se pueden eliminar en cualquier momento.",
        "feature_4": "La fecha de vencimiento aparece azul si no ha vencido, o roja si ya ha vencido. Si la tarea ya está realizada, no tendrá color.",
        "feature_5": "Cuando una tarea se marca como realizada, se desplaza hacia la zona de tareas realizadas.",
        "feature_6": "Si una tarea se ha marcado como realizada por error, es posible revertir el movimiento.",
        "feature_7": "Las tareas no se eliminarán cuando se reinicie la página."
      },
      "learned": {
        "learned_1": "A construir un proyecto de React con componentes de clases.",
        "learned_2": "A importar y exportar módulos en React.",
        "learned_3": "A validar formularios.",
        "learned_4": "A generar identificadores únicos con UUID.",
        "learned_5": "A manejar el estado y pasar propiedades entre componentes.",
        "learned_6": "A utilizar LocalStorage para la permanencia de datos.",
        "learned_7": "A especificar los tipos de las propiedades con PropTypes."
      },
      "technologies" : {
        "technologies_1": "Front-end: React (JavaScript), CSS-Bootstrap",
        "technologies_2": "Back-end: -"
      }
    },
    "project_10": {
      "url": "cazador-de-eventos",
      "title": "Cazador de Eventos",
      "main": "En esta página se puede obtener información sobre eventos de diferentes categorías y lugares. Además, dispone de sección de favoritos para que el usuario pueda guardarse los que más le gusten y consultarlos más tarde.", 
      "features": {
        "feature_1": "Se pueden realizar búsquedas por nombre de evento, ciudad o categoría.",
        "feature_2":"Cada evento dispone de un enlace a la página de EventBrite para ver los detalles o comprar entradas.",
        "feature_3": "Los eventos se pueden guardar en favoritos y consultar después.",
        "feature_4": "Los eventos favoritos se sincronizan con cualquier listado de eventos, apareciendo diferenciados con un corazón rojo.",
        "feature_5": "La sección de favoritos se mantiene aún reiniciando la página."
      },
      "learned": {
        "learned_1": "A obtener datos de una API como EventBrite.",
        "learned_2": "A dar estilos a la página con UIKit.",
        "learned_3": "A realizar llamadas a la API con Axios.",
        "learned_4": "A sincronizar favoritos con nuevas búsquedas. y guardarlos en LocalStorage."
      },
      "technologies" : {
        "technologies_1": "Front-end: React (JavaScript), CSS-UIKit",
        "technologies_2": "Back-end: -"
      }
    },
    "project_11": {
      "url": "el-ascensor",
      "title": "El ascensor",
      "main": "Un ascensor tradicional que cada persona puede llamar desde la planta en la que se encuentre. Éste recordará los pisos en los que debe parar a recoger y a dejar pasajeros.",
      "features": {
        "feature_1": "El usuario hace clic en una de las plantas, de esta manera emula su posición pulsando el botón del ascensor.",
        "feature_2": "El programa pregunta el nombre del pasajero y la planta de destino.",
        "feature_3": "A la vez, otros usuarios pueden llamar al ascensor y éste aprovechará los viajes para recogerlos.",
        "feature_4": "El ascensor irá dejando a los pasajeros en sus destinos según la cercanía al destino inicial, además de recoger a nuevos que se encuentren en el camino.",
        "feature_5": "Se muestra un registro de toda actividad realizada en el ascensor."
      },
      "learned": {
        "learned_1": "A dibujar elementos sencillos con CSS (nubes, sol, árboles, ascensor).",
        "learned_2": "A aplicar animaciones de movimiento a los elementos.",
        "learned_3": "A demostrar la asincronía de Node.js."
      },
      "technologies" : {
        "technologies_1": "Front-end: JavaScript, HTML, CSS",
        "technologies_2": "Back-end: -"
      }
    },
    "project_12": {
      "url": "spotify-express",
      "title": "Spotify Express",
      "main": "Este proyecto utiliza la API de Spotify para crear un buscador de artistas en el que se puede ver información de sus álbumes e incluso escuchar un avance de sus canciones.",
      "features": {
        "feature_1": "Las búsquedas se realizan por autor.",
        "feature_2": "Cuando se selecciona un artista, es posible ver todos sus álbumes.",
        "feature_3": "En cada álbum, aparecen las canciones que lo componen y un avance de 30 segundos de cada una.",
        "feature_4": "Es posible volver al inicio desde cualquier parte de la página."
      },
      "learned": {
        "learned_1": "A renderizar una página desde el lado del servidor con Express y Handlebars.",
        "learned_2": "A almacenar datos secretos como las llaves de la API en un documento seguro con Dotenv.",
        "learned_3": "A leer y entender documentación oficial de la API.",
        "learned_4": "A desplegar un proyecto de back-end con Heroku."
      },
      "technologies" : {
        "technologies_1": "Front-end: Node.js con Express y Handlebars, CSS",
        "technologies_2": "Back-end: -"
      }
    },
    "project_13": {
      "url": "conecta-4",
      "title": "Conecta 4",
      "main": "Juego online del clásico Conecta 4 donde un jugador juega contra otro por turnos y la finalidad es conseguir formar una linea recta combinando cuatro fichas seguidas antes que el rival.",
      "features": {
        "feature_1": "El juego permite dos modalidades de juego: jugador contra jugador o jugador contra máquina.",
        "feature_2": "Cuando se juega contra otro jugador, los turnos se alternan en el mismo ordenador, así que es necesario que los jugadores se encuentren físicamente uno junto al otro.",
        "feature_3": "Cuando se juega contra la máquina, el primero en comenzar será el jugador, posteriormente, la máquina hará su jugada.",
        "feature_4": "El juego finaliza cuando no se pueden realizar más movimientos o uno de los dos jugadores ha conseguido hacer cuatro en linea (horizontal, vertial o diagonal).",
        "feature_5": "Es posible reiniciar el juego o salir de él en cualquier momento."
      },
      "learned": {
        "learned_1": "A manejar lógica de matrices multidimensionales.",
        "learned_2": "A reproducir una inteligencia artificial sencilla.",
        "learned_3": "A crear rutas con React Router.",
        "learned_4": "A mantener el código limpio y uniforme con Eslint."
      },
      "technologies" : {
        "technologies_1": "Front-end: React (JavaScript), CSS",
        "technologies_2": "Back-end: -"
      }
    },
    "project_14": {
      "url": "tienda-de-patos",
      "title": "Tienda de patos",
      "main": "Tienda de patos es un comercio electrónico SPA que muestra informción sobre patos de goma. Este proyecto fue desarrollado durante el Bootcamp de Skylab de 3 maneras diferentes haciendo incapié en la refactorización continua.",
      "features": {
        "feature_1": "Es necesario disponer de una cuenta para acceder a la tienda.",
        "feature_2": "Se incluyen las funcionalidades de registro y logueo.",
        "feature_3": "Al realizar una búsqueda, aparecerán todos los patos que coincidan con el criterio.",
        "feature_4": "Se puede ver más detalle de sobre cualquier producto pulsando en la imagen.",
        "feature_5": "Existe un apartado de favoritos para guardar los productos seleccionados."
      },
      "learned": {
        "learned_1": "A refactorizar código continuamente.",
        "learned_2": "A desarrollar un logueo y un registro consumiendo una API que juega el papel de base de datos.",
        "learned_3": "A manejar errores mediante componentes.",
        "learned_4": "A separar la lógica según responsabilidades.",
        "learned_5": "A renderizar la aplicación desde el lado del servidor con Express y Pug."
      },
      "technologies" : {
        "technologies_1": "Front-end 1: Node.js con Express y Pug, CSS-SASS",
        "technologies_2": "Front-end 2: React (JavaScript), CSS-SASS",
        "technologies_3": "Front-end 3: JavaScript, HTML, CSS-SASS",
        "technologies_4": "Back-end: -"
      }
    },
    "project_15": {
      "url": "comete-el-mundo",
      "title": "Cómete el mundo",
      "main": "Éste es un proyecto realizado en grupo durante el Bootcamp de Skylab. La aplicación muestra información acerca de restaurantes de diferentes categorías en varias partes del mundo. Debido a un bloqueo inesperado de acceso a España, es necesario acceder mediante una VPN desde otro país (ej. EEUU).",
      "features": {
        "feature_1": "El usuario puede realizar búsquedas por ciudad y/o tipo de cocina o nombre del restaurante aún sin haber iniciado sesión.",
        "feature_2": "Se puede ver el detalle de cada restaurante pulsando en la imagen.",
        "feature_3": "La funcionalidad de guardar favoritos únicamente está disponible para usuarios registrados.",
        "feature_4": "Cuando el usuario inicia sesión, la página recuerda el último lugar donde estaba navegando.",
        "feature_5": "Al salir de la cuenta, se borra cualquier dato guardado excepto los favoritos."
      },
      "learned": {
        "learned_1": "A trabajar en un equipo de 3 personas.",
        "learned_2": "A manejar ramas y solicitudes (Pull Requests) de GitHub.",
        "learned_3": "A crear un temporizador con React.",
        "learned_4": "A añadir funcionalidades adicionales solo para usuarios registrados.",
        "learned_5": "A documentar el proyecto con UML.",
        "learned_6": "A acceder a una API con limitaciones por país mediante una VPN."
      },
      "technologies" : {
        "technologies_1": "Front-end: React (JavaScript), CSS-SASS",
        "technologies_2": "Back-end: -"
      }
    },
    "project_16": {
      "url": "wheely",
      "title": "Wheely",
      "main": "Este es mi proyecto final y primer proyecto Full Stack, realizado en el Bootcamp de Skylab. La idea nace de una necesidad real en las autoescuelas de agilizar la tarea de reservas de prácticas en la que tanto alumno como profesor pueden hacer la gestión 100% online además de un seguimiento del alumno, control de créditos disponibles, etc.",
      "features": {
        "feature_1": "Estudiantes, profesores y personal de administración disponen de cuentas con funcionalidades diferentes.",
        "feature_2": "Estudiante:",
        "feature_3": "Puede consultar y modificar sus datos personales y créditos disponibles.",
        "feature_4": "Puede reservar prácticas seleccionando cualquier profesor, día y hora. ",
        "feature_5": "Puede cancelar una reserva con 24 horas de antelación.",
        "feature_6": "Tanto profesor como alumno, reciben un correo de confirmación en cada reserva o cancelación de práctica.",
        "feature_7": "Puede consultar las reservas pendientes y las prácticas realizadas.",
        "feature_8": "Puede sopesar su progresión con las valoraciones de los profesores.",
        "feature_9": "Cuenta para pruebas: ana@ana.com // contraseña: 123.",
        "feature_10": "Profesor:",
        "feature_11": "Puede consultar y modificar sus datos personales.",
        "feature_12": "Puede consultar y filtrar sus reservas.",
        "feature_13": "Al terminar la práctica, el profesor emite una evaluación del alumno.",
        "feature_14": "Puede consultar pero no modificar su horario de trabajo.",
        "feature_15": "Cuenta para pruebas: toni@toni.com // contraseña: 123.",
        "feature_16": "Administrador:",
        "feature_17": "Puede añadir, modificar, consultar y eliminar cualquier usuario.",
        "feature_18": "Puede añadir créditos a los alumnos.",
        "feature_19": "Puede gestionar y editar el horario laboral de cada profesor.",
        "feature_20": "Puede acceder a todas las reservas realizadas.",
        "feature_21": "Puede ver la progresión de todos los alumnos."
      },
      "learned": {
        "learned_1": "A desarrollar un back-end con Node.js Express",
        "learned_2": "A agrugar todas las rutas en un router.",
        "learned_3": "A vincular una base de datos con MongoDB y esquematizarla con Mongoose.",
        "learned_4": "A utilizar React Hooks en el front-end.", 
        "learned_5": "A realizar TDD tests en el back-end con Mocha Chai y en el front-end con Jest.", 
        "learned_6": "A enviar correos utilizando la librería Nodemailer.",
        "learned_7": "A manejar reservas, cancelaciones y calendarios en tiempo real con Moment.", 
        "learned_8": "A emular un servicio de pago con créditos.",
        "learned_9": "A mostrar un menú de hamburguesa en dispositivos móviles.",
        "learned_10": "A conectar el front-end con el back-end desplegados en producción.",
        "learned_11": "A redactar documentación técnica y funcional.",
        "learned_12": "A cumplir con el contrato, fechas de entrega (2 semanas y media), manejar expectativas, control del estrés y priorización.",
        "learned_13": "A exponer el proyecto en público."
      },
      "technologies" : {
        "technologies_1": "Front-end: React Hooks (JavaScript), CSS-SASS, Mocha Chai",
        "technologies_2": "Back-end: Node.js con Express, MongoDB, test con Jest"
      }
    },
    "project_17": {
      "url": "kasaz",
      "title": "Kasaz",
      "main": "Kasaz es una inmobiliaria online donde se pueden buscar apartamentos personalizando los criterios de búsqueda.",
      "features": {
        "feature_1": "El usuario puede buscar apartamentos filtrando según combinaciones de los siguientes criterios:",
        "feature_2": "- Localización.",
        "feature_3": "- Precio mínimo y/o máximo.",
        "feature_4": "- Metros cuadrados.",
        "feature_5": "- Habitaciones.",
        "feature_6": "- Lavabos."
      },
      "learned": {
        "learned_1": "A desarrollar un proyecto Full Stack en un plazo de 4 días.",
        "learned_2": "A importar y exportar la base de datos de MongoDB con Compass y Terminal.",
        "learned_3": "A importar carpetas como módulos de NPM.",
        "learned_4": "A redactar instrucciones para correr el proyecto en local y testearlo.",
        "learned_5": "A combinar la lógica de filtros múltiples."
      },
      "technologies" : {
        "technologies_1": "Front-end: React Hooks (JavaScript), CSS-SASS, test Mocha Chai",
        "technologies_2": "Back-end: Node.js con Express, MongoDB, test con Jest"
      }
    },
    "project_18": {
      "url": "repositorios-de-github",
      "title": "Repositorios de GitHub",
      "main": "Este proyecto muestra información sobre los repositorios y datos públicos de cualquier usuario de GitHub.",
      "features": {
        "feature_1": "Al introducir un nombre de usuario de GitHub, se muestran los siguientes datos del usuario:",
        "feature_2": "- Avatar, nombre y apellido, nombre de usuario y descripción.",
        "feature_3": "- Un listado de todos los repositorios públicos",
        "feature_4": "- Enlaces a GitHub de cada repositorio.",
        "feature_5": "- Stars y forks."
      },
      "learned": {
        "learned_1": "A consumir la API de GitHub y entender la documentación oficial.",
        "learned_2": "A realizar llamadas a la API con AJAX."
      },
      "technologies" : {
        "technologies_1": "Front-end: JavaScript Vanilla, HTML, CSS-SASS",
        "technologies_2": "Back-end: -"
      }
    },
    "project_19": {
      "url": "kanban",
      "title": "Kanban",
      "main": "Este proyecto Full Stack reproduce un Kanban. Kanban es un sistema visual para gestionar el trabajo y las tareas a medida que avanza en un proceso. Es realmente fácil de usar porque las tareas sólo se tienen que arrastrar y soltar en la columna deseada.",
      "features": {
        "feature_1": "Funciona mediante un sistema de usuarios, es necesario estar registrado para poder acceder.",
        "feature_2": "Cada usuario dispone de 4 columnas en su cuenta para manejar las tareas: pendientes, en curso, para revisar y realizadas.",
        "feature_3": "Para cambiar de estado una tarea, es tan sencillo como arrastrarla a la columna que se desee.",
        "feature_4": "También es posible reordenar las tareas dentro de la misma columna.",
        "feature_5": "Cada tarea se puede eliminar individualmente.",
        "feature_6": "La columna de tareas realizadas incorpora una función de vaciado para eliminarlas todas a la vez."
      },
      "learned": {
        "learned_1": "A implementar Drag and Drop con React.",
        "learned_2": "A utilizar funciones avanzadas de React Hooks (useRef, usEffect, useState).",
        "learned_3": "A crear un sistema de usuarios."
      },
      "technologies" : {
        "technologies_1": "Front-end: React Hooks (JavaScript), CSS-SASS",
        "technologies_2": "Back-end: Node.js con Express, MongoDB"
      }
    },
    "project_20": {
      "url": "canvas",
      "title": "Canvas",
      "main": "Canvas es una plantilla de gestión estratégica empresarial para documentar modelos de negocio. Es un cuadro visual con elementos que describen la propuesta de valor, infraestructura, clientes y finanzas de una empresa o producto.",
      "features": {
        "feature_1": "Se utiliza en la gestión estratégica empresarial para documentar modelos de negocio.",
        "feature_2": "Es un CRUD: es posible añadir, editar, consultar y eliminar notas.",
        "feature_3": "Puede verse una explicación de cada sección haciendo clic en el \"?\" de la parte superior.",
        "feature_4": "El diseño es responsivo, es compatible con el tamaño de todos los dispositivo.",
        "feature_5": "El diseño es adaptable, cada contenedor se adapta a su contenido."
      },
      "learned": {
        "learned_1": "A crear ventanas modales con React.",
        "learned_2": "A maquetar de manera totalmente responsiva con una combinación de Grid y Flex.",
        "learned_3": "A entender la utilidad y funcionamiento del modelo de negocio Canvas."
      },
      "technologies" : {
        "technologies_1": "Front-end: React Hooks (JavaScript), CSS-SASS, test Mocha Chai",
        "technologies_2": "Back-end: Node.js con Express, MongoDB, test con Jest"
      }
    },
    "project_21": {
      "url": "tienda-de-zumos",
      "title": "Tienda de zumos",
      "main": "Este proyecto es una simulación de una tienda de zumos. La finalidad ha sido aprender React Redux con Sagas y Thunks.",
      "features": {
        "feature_1": "Se trata de un CRUD, el usuario puede: ",
        "feature_2": "- Crear productos.",
        "feature_3": "- Consultar productos.",
        "feature_4": "- Modificar productos.",
        "feature_5": "- Eliminar productos."
      },
      "learned": {
        "learned_1": "A manejar el estado de manera global con React Redux.",
        "learned_2": "A controlar la asincronía de Redux con los middlewares Redux-thunk y Redux-saga.",
        "learned_3": "A mostrar ventanas de alerta de manera sencilla con Sweetalert2.",
        "learned_4": "A emular un back-end con una API REST falsa con JSON-Server."
      },
      "technologies" : {
        "technologies_1": "Front-end: React Hooks Redux (JavaScript), CSS-SASS",
        "technologies_2": "Back-end: Emulado con JSON-Server"
      }
    },
    "project_22": {
      "url": "hotel-paraiso",
      "title": "Hotel Paraíso",
      "main": "Hotel Paraíso es una página de ejemplo de páginas corporativas para hoteles donde se muestra información del hotel y detalle de las habitaciones.",
      "features": {
        "feature_1": "La página dispone de una barra de navegación con las diferentes secciones a mostrar.", 
        "feature_2": "Si se pulsa en una habitación, se abre otra página con el detalle."
      },
      "learned": {
        "learned_1": "A crear una página web renderizada desde el servidor con Gatsby.",
        "learned_2": "A realizar consultas con GraphQL a través de una sola llamada a la API.",
        "learned_3": "A implementar CSS dentro del componente con Styled-components.",
        "learned_4": "A mejorar el SEO.",
        "learned_5": "A utilizar un CMS para almacenar y consultar información de la página con DatoCMS.",
        "learned_6": "A desplegar la aplicación en Netlify.",
        "learned_7": "Cómo analizar y realizar una auditoría del rendimiento y el SEO de la página."
      },
      "technologies" : {
        "technologies_1": "Front-end: Gatsby con React (JavaScript), GraphQL, CSS-styled-components, DatoCMS",
        "technologies_2": "Back-end: -"
      }
    },
    "project_23": {
      "url": "portafolio-multilenguaje",
      "title": "Portafolio multilenguaje",
      "main": "Esta página web personal ha sido desarrollada expresamente para colaborar en el trabajo de fin de grado de mi hermana sobre traducciones tecnológicas.",
      "features": {
        "feature_1": "La página es multilenguaje: inglés, castellano, catalań y alemán.",
        "feature_2": "Traducciones a cargo de la traductora Yolanda Moreno.",
        "feature_3": "El diseño inicial se basa en una sola página en la que se muestra mi biografía, mis proyectos y datos de contacto.", 
        "feature_4": "Al final de la página se incluye un formulario que permite enviarme un mensaje.",
        "feature_5": "Se puede ver el detalle de cada proyecto haciendo clic en él."
      },
      "learned": {
        "learned_1": "A preparar un proyecto para ser traducido en cuatro idiomas.",
        "learned_2": "A generar páginas dinámicamente a través de una plantilla.",
        "learned_3": "A desarrollar la lógica y estilos de carrusel de múltiples elementos.",
        "learned_4": "A añadir un formulario vinculado a un back-end para enviar correos."
      },
      "technologies" : {
        "technologies_1": "Front-end: Gatsby con React (JavaScript), GraphQL, CSS-SASS",
        "technologies_2": "Back-end: Node.js con Express"
      }
    }
  }
}